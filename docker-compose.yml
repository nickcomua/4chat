services:
  couchdb-dev:
    image: couchdb:3.3
    container_name: couchdb-dev
    restart: unless-stopped
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    volumes:
      # - couchdb-dev-data:/opt/couchdb/data
      - ./docker/couchdb/dev/local.ini:/opt/couchdb/etc/local.d/local.ini
    profiles:
      - dev
    networks:
      - couchdb-network

  couchdb-init-dev:
    # A tiny image that contains curl
    image: alpine/curl:latest
    container_name: couchdb-init-dev
    profiles:
      - dev
    networks:
      - couchdb-network
    # Pass credentials from the main service
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
      - COUCHDB_HOST=couchdb-dev
    volumes:
      # Mount the script we just created
      - ./docker/couchdb/init.sh:/init.sh
    # This ensures couchdb-dev is started first.
    # Note: It does NOT wait for it to be ready. Our script handles that.
    depends_on:
      - couchdb-dev
    # The command to run. It executes our script.
    command: sh -c "apk add --no-cache netcat-openbsd && /init.sh"
    # Optional: If the script fails, retry a few times.
    restart: on-failure

  couchdb-prod:
    image: couchdb:3.3
    container_name: couchdb-prod
    restart: unless-stopped
    ports:
      - "5985:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-changeme}
    volumes:
      - couchdb-prod-data:/opt/couchdb/data
      - ./docker/couchdb/prod/local.ini:/opt/couchdb/etc/local.d/local.ini
    profiles:
      - prod
    networks:
      - couchdb-network

  couchdb-init-prod:
    # A tiny image that contains curl
    image: curlimages/curl:latest
    container_name: couchdb-init-prod
    profiles:
      - prod
    networks:
      - couchdb-network
    # Pass credentials from the main service
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-admin}
    volumes:
      # Mount the script we just created
      - ./docker/couchdb/dev/init.sh:/init.sh
    # This ensures couchdb-dev is started first.
    # Note: It does NOT wait for it to be ready. Our script handles that.
    depends_on:
      - couchdb-dev
    # The command to run. It executes our script.
    command: sh -c "apk add --no-cache netcat-openbsd && /init.sh ${COUCHDB_USER} ${COUCHDB_PASSWORD} couchdb-prod"
    # Optional: If the script fails, retry a few times.
    restart: on-failure

volumes:
  couchdb-dev-data:
    driver: local
  couchdb-prod-data:
    driver: local

networks:
  couchdb-network:
    driver: bridge
